name: Random Github Action Experiments

on:
  push:
    branches:
      # - test-random-github-action-experiments
      - test-random-github-action-experiments-disabled-for-now

jobs:


  rahim-experimenting:
    runs-on: macos-14
    steps:
      - name: Checkout Repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: get devices into an output
        id: the-devices
        run: |
          simulator_udid=$(xcrun simctl list devices "iPhone 14" -j | jq '.devices' | jq '."com.apple.CoreSimulator.SimRuntime.iOS-17-0"[0]["udid"]')
          echo "simulator_udid="$(echo $simulator_udid) >> ${GITHUB_OUTPUT}
          
          # echo "devices"=$(xcrun simctl list devices "iPhone 14" -j)  >> "$GITHUB_OUTPUT"

      - name: print device
        run: |
          echo "${{ steps.the-devices.outputs.simulator_udid }}"

          exit 1



      - name: Install mitmproxy & pm2 (process manager)
        run: |
          brew install mitmproxy

          # install pm2
          npm i -g pm2

      - name: Start mitmproxy via mitmdump and kill it
        run: |
          set +e
          pm2 start mitmdump -- --allow-hosts 'mobile-e2e-site-1.test.mattermost.cloud' --ignore-hosts 'localhost' -s /Users/runner/work/mattermost-mobile/mattermost-mobile/scripts/mitmdump-flow-parsing.py
          sleep 5

          pm2 stop mitmdump
          sleep 3;

      - name: install certificate
        id: "install_certificate"
        run: |
          sudo security add-trusted-cert -d -p ssl -p basic -k /Library/Keychains/System.keychain ~/.mitmproxy/mitmproxy-ca-cert.pem

      #     # xcrun simctl list devices "iPhone 14"

      #     xcrun simctl boot "iPhone 14"

      #     # xcrun simctl getenv booted SIMULATOR_UDID

      #     # must boot first before adding root cert, add 5 mins to the process
      #     xcrun simctl keychain $(xcrun simctl getenv booted SIMULATOR_UDID) add-root-cert ~/.mitmproxy/mitmproxy-ca-cert.pem


      - name: networksetup list all
        run: |
          networksetup -listallnetworkservices
          networksetup -getwebproxy Ethernet
          networksetup -getsecurewebproxy Ethernet
      # response:
      # Ethernet

      - name: test curl 1
        run: |
          curl -o /dev/null -s -w 'Total: %{time_total}s\n'  https://mobile-e2e-site-1.test.mattermost.cloud/api/v4/system/ping?get_server_status=true

      - name: throttle bandwidth down
        run: |
          echo "dummynet in from mobile-e2e-site-1.test.mattermost.cloud to any pipe 1
          dummynet out from any to mobile-e2e-site-1.test.mattermost.cloud pipe 2" | sudo pfctl -f -
          
          # pipe 1 is download, below is 3.3Mb/s with 1000ms latency
          sudo dnctl pipe 1 config bw 3300Kbit/s delay 1000ms
          
          # pipe 2 is upload, below is 3.3Mb/s with 1000ms latency
          sudo dnctl pipe 2 config bw 3300Kbit/s delay 1000ms
          
          sudo pfctl -E


      - name: start mitmdump
        run: |
          networksetup -setwebproxy Ethernet "127.0.0.1" "8080"
          networksetup -setsecurewebproxy Ethernet "127.0.0.1" "8080"

          networksetup -getwebproxy Ethernet
          networksetup -getsecurewebproxy Ethernet

          # mitmdump --allow-hosts 'mobile-e2e-site-1.test.mattermost.cloud' --ignore-hosts 'localhost' -s /Users/runner/work/mattermost-mobile/mattermost-mobile/scripts/mitmdump-flow-parsing.py

          pm2 start mitmdump

          sleep 5;

      - name: test using Chrome to see if it hits proxy
        run: |
          open -a "Google Chrome" https://mobile-e2e-site-1.test.mattermost.cloud/api/v4/system/ping\?get_server_status\=true

      - name: test
        run: |
          curl --proxy 127.0.0.1:8080 --cacert ~/.mitmproxy/mitmproxy-ca-cert.pem https://mobile-e2e-site-1.test.mattermost.cloud/api/v4/system/ping?get_server_status=true
          curl --proxy 127.0.0.1:8080 https://mobile-e2e-site-1.test.mattermost.cloud/api/v4/system/ping?get_server_status=true


      - name: reset network settings
        if: always()
        run: |
          pm2 stop mitmdump
          
          networksetup -setwebproxystate Ethernet "off"
          networksetup -setsecurewebproxystate Ethernet "off"

          sudo pfctl -d

          sleep 3;

          
      - name: Upload Artifacts
        if: always()
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: artifacts-${{ github.run_id }}
          path: /Users/runner/work/mattermost-mobile/mattermost-mobile/flow-output.csv
